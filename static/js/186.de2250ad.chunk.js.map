{"version":3,"file":"static/js/186.de2250ad.chunk.js","mappings":"+SAEMA,EAAM,mCAGL,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACaC,EAAAA,EAAAA,IAAA,mCAAsCF,IADnD,cACCG,EADD,yBAEEA,EAAIC,KAAKC,SAFX,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,uFACaL,EAAAA,EAAAA,IAAA,gBAAmBK,EAAnB,oBAAiCP,EAAjC,oBADb,cACCG,EADD,yBAEEA,EAAIC,MAFN,kEAKA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA2BD,GAA3B,uFACaL,EAAAA,EAAAA,IAAA,gBACPK,EADO,4BACeP,EADf,oBADb,cACCG,EADD,yBAIEA,EAAIC,KAAKK,MAJX,kEAMA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8BH,GAA9B,uFACaL,EAAAA,EAAAA,IAAA,gBACPK,EADO,4BACeP,EADf,2BADb,cACCG,EADD,yBAIEA,EAAIC,KAAKC,SAJX,kEAMA,SAAeM,EAAtB,kC,aAAO,O,oBAAA,WAA+BC,GAA/B,uFACaV,EAAAA,EAAAA,IAAA,+BACQF,EADR,4DAC+DY,IAF5E,cACCT,EADD,yBAIEA,EAAIC,KAAKC,SAJX,kEAxBPH,EAAAA,EAAAA,SAAAA,QAAyB,+B,yGC+BzB,UA9BgB,WACd,OAAwBW,EAAAA,EAAAA,UAAS,MAAjC,eAAOT,EAAP,KAAaU,EAAb,KACQP,GAAOQ,EAAAA,EAAAA,MAAPR,GAWR,IATAS,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,WAAMC,GAAN,uFACIC,EAAAA,GAAmBD,GADvB,cACRf,EADQ,yBAEPW,EAAQX,IAFD,2CAAH,sDAKbc,EAAQV,EACT,GAAE,CAACA,IAECH,EAEL,OACE,0BACE,wBACGA,IAAS,GACRA,EAAKgB,KAAI,gBAAGb,EAAH,EAAGA,GAAIc,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACP,2BACE,wBAAKD,KACL,uBAAIC,MAFGf,EADF,IAKH,6CAIf,C","sources":["API/API.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '84029c9837f956e6efcec3397d1d9066';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrandingDay() {\n  const res = await axios.get(`trending/all/day?api_key=${KEY}`);\n  return res.data.results;\n}\n\nexport async function getMovieById(id) {\n  const res = await axios.get(`movie/${id}?api_key=${KEY}&language=en-US`);\n  return res.data;\n}\n\nexport async function getCastById(id) {\n  const res = await axios.get(\n    `movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return res.data.cast;\n}\nexport async function getReviewsById(id) {\n  const res = await axios.get(\n    `movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return res.data.results;\n}\nexport async function getMoviesByName(value) {\n  const res = await axios.get(\n    `search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${value}`\n  );\n  return res.data.results;\n}\n\n// https://api.themoviedb.org/3/search/movie?api_key=<<api_key>>&language=en-US&page=1&include_adult=false\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport * as API from '../../API/API';\n\nconst Reviews = () => {\n  const [data, setData] = useState(null);\n  const { id } = useParams();\n\n  useEffect(() => {\n    const getData = async MovieId => {\n      const res = await API.getReviewsById(MovieId);\n      return setData(res);\n    };\n\n    getData(id);\n  }, [id]);\n\n  if (!data) return;\n\n  return (\n    <div>\n      <ul>\n        {data === [] ? (\n          data.map(({ id, author, content }) => (\n            <li key={id}>\n              <h2>{author}</h2>\n              <p>{content}</p>\n            </li>\n          ))) : 'We dont have any reviews for this movie'}\n      </ul>\n    </div>\n  );\n};\n\nexport default Reviews;\n"],"names":["KEY","getTrandingDay","axios","res","data","results","getMovieById","id","getCastById","cast","getReviewsById","getMoviesByName","value","useState","setData","useParams","useEffect","getData","MovieId","API","map","author","content"],"sourceRoot":""}