{"version":3,"file":"static/js/982.fae43a5f.chunk.js","mappings":"8PACA,EAAgC,iCAAhC,EAAwE,wBAAxE,EAA6G,8B,SCyE7G,EAvEkB,SAAC,GAAc,IAAD,IAAXA,EAAW,EAAXA,KAEbC,GAAWC,EAAAA,EAAAA,MAEjBC,QAAQC,IAAIH,GAEZ,IACEI,EAMEL,EANFK,MACAC,EAKEN,EALFM,aACAC,EAIEP,EAJFO,aACAC,EAGER,EAHFQ,SACAC,EAEET,EAFFS,OACAC,EACEV,EADFU,cAGIC,EAAgB,IAAIC,KAAKL,GAAcM,cAGvCC,EAAiBC,KAAKC,MAAqB,GAAfV,GAIlC,OACE,iBAAKW,UAAWC,EAAhB,WACE,iBAAKD,UAAWC,EAAhB,WACE,gBACEC,IACET,EAAa,UAXD,mCAWC,OACUA,GAR/B,sGAWMU,IAAI,GACJC,MAAO,IACPC,OAAQ,OAEV,2BACE,2BACE,0BACGjB,EADH,KACYM,EADZ,QAGA,wCAAgBG,EAAhB,WAEF,2BACE,sCACA,uBAAIN,QAEN,2BACE,mCACCC,EAAOc,KAAI,SAAAC,GAAI,OACd,uBAAkBA,EAAKC,MAAfD,EAAKE,GADC,cAMtB,4BACE,mBACA,mDACA,2BACE,yBACE,SAAC,EAAAC,KAAD,CAAMV,UAAWC,EAAgBU,MAAO,CAACC,KAAI,UAAE5B,EAAS2B,aAAX,aAAE,EAAgBC,MAAOC,GAAI,OAA1E,qBAEF,yBACE,SAAC,EAAAH,KAAD,CAAMV,UAAWC,EAAgBU,MAAO,CAACC,KAAI,UAAE5B,EAAS2B,aAAX,aAAE,EAAgBC,MAAOC,GAAI,UAA1E,2BAGJ,uBAIP,ECvED,EAAyB,2BCEjBH,EAASI,EAAQ,IAAjBJ,KAaR,EAVkB,SAAC,GAAqB,IAApBK,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,SACtB,OACI,+BACA,SAACN,EAAD,CAAMV,UAAWC,EAAYY,GAAIE,EAAjC,SACCC,KAIR,EC0BD,EAlCqB,WAAO,IAAD,MACzB,GAAwBC,EAAAA,EAAAA,UAAS,MAAjC,eAAOlC,EAAP,KAAamC,EAAb,KACQT,GAAOU,EAAAA,EAAAA,MAAPV,GAEFzB,GAAWC,EAAAA,EAAAA,MAajB,IATAmC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,WAAMC,GAAN,uFACIC,EAAAA,GAAiBD,GADrB,cACRE,EADQ,yBAEPN,EAAQM,IAFD,2CAAH,sDAKbH,EAAQZ,EACT,GAAE,CAACA,IAEC1B,EAAL,CAKA,IAAM0C,EAAY,oBAAGzC,EAAS2B,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAE7C,OACE,6BACE,SAAC,EAAD,CAAYG,KAAMU,EAAlB,sBACA,SAAC,EAAD,CAAW1C,KAAMA,EAAM4B,MAAO,CAACC,KAAI,UAAE5B,EAAS2B,aAAX,aAAE,EAAgBC,SACrD,SAAC,EAAAc,SAAD,CAAUC,UAAU,6CAApB,UACE,SAAC,KAAD,QAZW,CAgBlB,C","sources":["webpack://react-homework-template/./src/components/MovieInfo/MovieInfo.module.css?df02","components/MovieInfo/MovieInfo.jsx","webpack://react-homework-template/./src/components/ButtonBack/ButtonBack.module.css?8b4f","components/ButtonBack/ButtonBack.jsx","pages/MovieDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movie_Details\":\"MovieInfo_movie_Details__q72SU\",\"info\":\"MovieInfo_info__z1mCF\",\"info__link\":\"MovieInfo_info__link__PLdg0\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './MovieInfo.module.css';\n\nconst MovieInfo = ({ data }) => {\n  \n  const location = useLocation();\n\n  console.log(location);\n\n  const { \n    title, \n    vote_average, \n    release_date, \n    overview, \n    genres, \n    backdrop_path,\n  } = data;\n\n  const yearOfRelease = new Date(release_date).getFullYear();\n  const BASE_IMG_PATH = 'https://image.tmdb.org/t/p/w500';\n  // const posterImage = `${BASE_IMG_PATH}${backdrop_path}`;\n  const roundUserScore = Math.round(vote_average * 10);\n  const USER_NOT_FOUND_IMAGE =\n    'https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRCs0nxDmEg-l4K-FtXD2onrbormkXpAkdn6A&usqp=CAU';\n\n  return (\n    <div className={css.info}>\n      <div className={css.movie_Details}>\n        <img\n          src={\n            backdrop_path\n              ? `${BASE_IMG_PATH}${backdrop_path}`\n              : USER_NOT_FOUND_IMAGE\n          }\n          alt=\"\"\n          width={240}\n          height={320}\n        />\n        <ul>\n          <li>\n            <h1>\n              {title} ({yearOfRelease})\n            </h1>\n            <p>User Score: {roundUserScore}%</p>\n          </li>\n          <li>\n            <h2>Overview</h2>\n            <p>{overview}</p>\n          </li>\n          <li>\n            <h2>Genres</h2>\n            {genres.map(item => (\n              <p key={item.id}>{item.name}</p>\n            ))}\n          </li>\n        </ul>\n      </div>\n      <div>\n        <hr />\n        <p>Additional Information</p>\n        <ul>\n          <li>\n            <Link className={css.info__link} state={{from: location.state?.from}} to={'cast'} >Cast</Link>\n          </li>\n          <li>\n            <Link className={css.info__link} state={{from: location.state?.from}} to={'reviews'}>Reviews</Link>\n          </li>\n        </ul>\n        <hr />\n      </div>\n    </div>\n  );\n};\n\nexport default MovieInfo;\n","// extracted by mini-css-extract-plugin\nexport default {\"button\":\"ButtonBack_button__G1jT3\"};","import PropTypes from 'prop-types';\nimport css from './ButtonBack.module.css';\n\nconst { Link } = require(\"react-router-dom\")\n\n\nconst ButtonBack =({path, children}) =>{\n    return(\n        <>\n        <Link className={css.button} to={path}>\n        {children}\n        </Link>\n        </>\n    )\n}\n\nexport default ButtonBack;\n\nButtonBack.propTypes= {\n    // при різних пасах видає різний проп\n    // path: PropTypes.object || PropTypes.string,\n    children: PropTypes.string ,  \n}","import { useParams, Outlet, useLocation } from 'react-router-dom';\nimport * as API from '../API/API';\nimport { Suspense, useEffect, useState } from 'react';\nimport MovieInfo from 'components/MovieInfo/MovieInfo';\nimport ButtonBack from 'components/ButtonBack/ButtonBack';\n\nconst MovieDetails = () => {\n  const [data, setData] = useState(null);\n  const { id } = useParams();\n\n  const location = useLocation();\n\n  // console.log(location);\n\n  useEffect(() => {\n    const getData = async MovieId => {\n      const res = await API.getMovieById(MovieId);\n      return setData(res);\n    };\n\n    getData(id);\n  }, [id]);\n\n  if (!data) return;\n\n  // const backLinkHref = useMemo(() => \n  //   location.state?.from ?? '/movies', [location.state?.from]);\n\n  const backLinkHref = location.state?.from ?? '/movies';\n\n  return (\n    <main>\n      <ButtonBack path={backLinkHref}>Go back</ButtonBack>\n      <MovieInfo data={data} state={{from: location.state?.from}}/>\n      <Suspense fallback={<div>Loading Data...</div>}>\n        <Outlet />\n      </Suspense>\n    </main>\n  );\n};\nexport default MovieDetails;\n"],"names":["data","location","useLocation","console","log","title","vote_average","release_date","overview","genres","backdrop_path","yearOfRelease","Date","getFullYear","roundUserScore","Math","round","className","css","src","alt","width","height","map","item","name","id","Link","state","from","to","require","path","children","useState","setData","useParams","useEffect","getData","MovieId","API","res","backLinkHref","Suspense","fallback"],"sourceRoot":""}